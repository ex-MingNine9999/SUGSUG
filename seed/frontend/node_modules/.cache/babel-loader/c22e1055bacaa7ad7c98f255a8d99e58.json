{"remainingRequest":"/Users/ming._.nine9/SW/seed/frontend/node_modules/babel-loader/lib/index.js!/Users/ming._.nine9/SW/seed/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ming._.nine9/SW/seed/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ming._.nine9/SW/seed/frontend/src/components/Parallax.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ming._.nine9/SW/seed/frontend/src/components/Parallax.vue","mtime":1601738044362},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\nfunction debounce(func, wait, immediate) {\n  let timeout;\n  return function () {\n    const context = this,\n          args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    }, wait);\n    if (immediate && !timeout) func.apply(context, args);\n  };\n}\n\n;\nexport default {\n  name: 'parallax',\n\n  data() {\n    return {\n      styles: {},\n      debounceTimeout: 6\n    };\n  },\n\n  methods: {\n    handleScroll(scrollVal) {\n      let oVal = scrollVal / 3;\n      this.styles = {\n        transform: `translate3d(0, ${oVal}px,0)`\n      };\n    },\n\n    checkForParallax(scrollVal) {\n      let fn = debounce(() => this.handleScroll(scrollVal), this.debounceTimeout);\n      fn();\n    }\n\n  },\n\n  mounted() {\n    let self = this;\n    window.addEventListener(\"scroll\", function () {\n      let scrollVal = this.scrollY;\n      self.checkForParallax(scrollVal);\n    });\n  }\n\n};",{"version":3,"sources":["Parallax.vue"],"names":[],"mappings":";;;;;AAMA,SAAA,QAAA,CAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA;AACA,MAAA,OAAA;AACA,SAAA,YAAA;AACA,UAAA,OAAA,GAAA,IAAA;AAAA,UACA,IAAA,GAAA,SADA;AAEA,IAAA,YAAA,CAAA,OAAA,CAAA;AACA,IAAA,OAAA,GAAA,UAAA,CAAA,MAAA;AACA,MAAA,OAAA,GAAA,IAAA;AACA,UAAA,CAAA,SAAA,EAAA,IAAA,CAAA,KAAA,CAAA,OAAA,EAAA,IAAA;AACA,KAHA,EAGA,IAHA,CAAA;AAIA,QAAA,SAAA,IAAA,CAAA,OAAA,EAAA,IAAA,CAAA,KAAA,CAAA,OAAA,EAAA,IAAA;AACA,GATA;AAUA;;AAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,eAAA,EAAA;AAFA,KAAA;AAIA,GAPA;;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,YAAA,CAAA,SAAA,EAAA;AACA,UAAA,IAAA,GAAA,SAAA,GAAA,CAAA;AACA,WAAA,MAAA,GAAA;AACA,QAAA,SAAA,EAAA,kBAAA,IAAA;AADA,OAAA;AAGA,KANA;;AAOA,IAAA,gBAAA,CAAA,SAAA,EAAA;AACA,UAAA,EAAA,GAAA,QAAA,CAAA,MAAA,KAAA,YAAA,CAAA,SAAA,CAAA,EAAA,KAAA,eAAA,CAAA;AACA,MAAA,EAAA;AACA;;AAVA,GARA;;AAoBA,EAAA,OAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,YAAA;AACA,UAAA,SAAA,GAAA,KAAA,OAAA;AACA,MAAA,IAAA,CAAA,gBAAA,CAAA,SAAA;AACA,KAHA;AAIA;;AA1BA,CAAA","sourcesContent":["<template>\n    <div :style=\"styles\">\n        <slot></slot>\n    </div>\n</template>\n<script>\n  function debounce(func, wait, immediate) {\n    let timeout;\n    return function () {\n      const context = this,\n        args = arguments;\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      }, wait);\n      if (immediate && !timeout) func.apply(context, args);\n    };\n  };\n  export default {\n    name: 'parallax',\n    data() {\n      return {\n        styles: {},\n        debounceTimeout: 6\n      }\n    },\n    methods: {\n      handleScroll(scrollVal) {\n        let oVal = (scrollVal / 3);\n        this.styles = {\n          transform: `translate3d(0, ${oVal}px,0)`\n        };\n      },\n      checkForParallax(scrollVal) {\n        let fn = debounce(() => this.handleScroll(scrollVal), this.debounceTimeout);\n        fn();\n      }\n    },\n    mounted() {\n      let self = this;\n      window.addEventListener(\"scroll\", function () {\n        let scrollVal = this.scrollY;\n        self.checkForParallax(scrollVal);\n      })\n    }\n  }\n</script>\n"],"sourceRoot":"src/components"}]}