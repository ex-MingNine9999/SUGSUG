{"remainingRequest":"/Users/ming._.nine9/SW/seed/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ming._.nine9/SW/seed/frontend/src/components/Modal.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"/Users/ming._.nine9/SW/seed/frontend/src/components/Modal.vue","mtime":1604224559000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/postcss-loader/src/index.js","mtime":1604224559000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/sass-loader/dist/cjs.js","mtime":1604224559000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIn5AL2Fzc2V0cy9zYXNzL25vdy11aS1raXQvdmFyaWFibGVzIjsKQGltcG9ydCAifkAvYXNzZXRzL3Nhc3Mvbm93LXVpLWtpdC9taXhpbnMiOwpAaW1wb3J0ICJ+QC9hc3NldHMvc2Fzcy9ub3ctdWkta2l0L21vZGFscyI7Cg=="},{"version":3,"sources":["Modal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA","file":"Modal.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <SlideYUpTransition :duration=\"animationDuration\">\n        <div class=\"modal fade\"\n             @click.self=\"closeModal\"\n             :class=\"[{'show d-block': show}, {'d-none': !show}, {'modal-mini': type === 'mini'}]\"\n             v-show=\"show\"\n             tabindex=\"-1\"\n             role=\"dialog\"\n             :aria-hidden=\"!show\">\n\n            <div class=\"modal-dialog\"\n                 :class=\"[{'modal-notice': type === 'notice'}, modalClasses]\">\n                <div class=\"modal-content\">\n                    <slot name=\"base-content\">\n                        <div class=\"modal-header\" :class=\"headerClasses\">\n                            <slot name=\"close-button\">\n                                <button type=\"button\"\n                                        v-if=\"showClose\"\n                                        @click=\"closeModal\"\n                                        class=\"close\"\n                                        data-dismiss=\"modal\"\n                                        :aria-hidden=\"!show\">\n                                    <i class=\"now-ui-icons ui-1_simple-remove\"></i>\n                                </button>\n                            </slot>\n                            <slot name=\"header\"></slot>\n                        </div>\n\n                        <div class=\"modal-body\" :class=\"bodyClasses\">\n                            <slot></slot>\n                        </div>\n\n                        <div class=\"modal-footer\" :class=\"footerClasses\">\n                            <slot name=\"footer\"></slot>\n                        </div>\n                    </slot>\n                </div>\n            </div>\n\n        </div>\n    </SlideYUpTransition>\n</template>\n<script>\n  import { SlideYUpTransition } from 'vue2-transitions'\n\n  export default {\n    name: 'modal',\n    components: {\n      SlideYUpTransition\n    },\n    props: {\n      show: Boolean,\n      showClose: {\n        type: Boolean,\n        default: true\n      },\n      type: {\n        type: String,\n        default: '',\n        validator(value) {\n          let acceptedValues = ['', 'notice', 'mini']\n          return acceptedValues.indexOf(value) !== -1\n        }\n      },\n      modalClasses: [Object, String],\n      headerClasses: [Object, String],\n      bodyClasses: [Object, String],\n      footerClasses: [Object, String],\n      animationDuration: {\n        type: Number,\n        default: 500\n      }\n    },\n    methods: {\n      closeModal() {\n        this.$emit('update:show', false)\n        this.$emit('close')\n      }\n    },\n    watch: {\n      show(val) {\n        let documentClasses = document.body.classList\n        if (val) {\n          documentClasses.add('modal-open')\n        } else {\n          documentClasses.remove('modal-open')\n        }\n      }\n    }\n  }\n</script>\n<style>\n    .modal.show {\n        background-color: rgba(0, 0, 0, 0.3)\n    }\n</style>\n<style lang=\"scss\">\n    @import \"~@/assets/sass/now-ui-kit/variables\";\n    @import \"~@/assets/sass/now-ui-kit/mixins\";\n    @import \"~@/assets/sass/now-ui-kit/modals\";\n</style>\n"]}]}