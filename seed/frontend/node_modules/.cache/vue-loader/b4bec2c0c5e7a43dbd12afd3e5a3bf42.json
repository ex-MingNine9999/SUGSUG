{"remainingRequest":"/Users/ming._.nine9/SW/seed/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ming._.nine9/SW/seed/frontend/src/components/Inputs/formGroupInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ming._.nine9/SW/seed/frontend/src/components/Inputs/formGroupInput.vue","mtime":1601738044361},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  inheritAttrs: false,\n  name: 'fg-input',\n  props: {\n    required: Boolean,\n    label: String,\n    error: String,\n    labelClasses: String,\n    inputClasses: String,\n    value: {\n      type: [String, Number],\n      default: ''\n    },\n    addonRightIcon: String,\n    addonLeftIcon: String\n  },\n  data() {\n    return {\n      focused: false\n    }\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: this.updateValue,\n        focus: this.onFocus,\n        blur: this.onBlur\n      }\n    },\n    hasIcon() {\n      const {addonRight, addonLeft} = this.$slots;\n      return addonRight !== undefined || addonLeft !== undefined || this.addonRightIcon !== undefined || this.addonLeftIcon !== undefined\n    }\n  },\n  methods: {\n    updateValue(evt) {\n      let value = evt.target.value;\n      this.$emit('input', value);\n    },\n    onFocus(value){\n      this.focused = true;\n      this.$emit('focus', value);\n    },\n    onBlur(value){\n      this.focused = false;\n      this.$emit('blur', value);\n    }\n  }\n}\n",{"version":3,"sources":["formGroupInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"formGroupInput.vue","sourceRoot":"src/components/Inputs","sourcesContent":["<template>\n  <div class=\"form-group\"\n       :class=\"[\n       {'input-group': hasIcon},\n       {'has-danger': error},\n       {'input-group-focus': focused},\n       {'has-label': label || $slots.label}]\">\n    <slot name=\"label\">\n      <label v-if=\"label\" :class=\"labelClasses\">\n        {{label}}\n        <span v-if=\"required\">*</span>\n      </label>\n    </slot>\n\n    <slot name=\"addonLeft\">\n      <div v-if=\"addonLeftIcon\" class=\"input-group-prepend\">\n        <i class=\"input-group-text\" :class=\"addonLeftIcon\"></i>\n      </div>\n    </slot>\n    <slot>\n      <input\n        :value=\"value\"\n        v-on=\"listeners\"\n        v-bind=\"$attrs\"\n        class=\"form-control\"\n        :class=\"[{valid: value && !error}, inputClasses]\"\n        aria-describedby=\"addon-right addon-left\">\n    </slot>\n    <slot name=\"addonRight\">\n        <span v-if=\"addonRightIcon\" class=\"input-group-addon input-group-append\">\n          <i class=\"input-group-text\" :class=\"addonRightIcon\"></i>\n        </span>\n    </slot>\n\n    <slot name=\"infoBlock\"></slot>\n    <slot name=\"helpBlock\">\n      <div class=\"text-danger invalid-feedback\" style=\"display: block;\" :class=\"{'mt-2': hasIcon}\" v-if=\"error\">\n        {{ error }}\n      </div>\n    </slot>\n  </div>\n</template>\n<script>\n  export default {\n    inheritAttrs: false,\n    name: 'fg-input',\n    props: {\n      required: Boolean,\n      label: String,\n      error: String,\n      labelClasses: String,\n      inputClasses: String,\n      value: {\n        type: [String, Number],\n        default: ''\n      },\n      addonRightIcon: String,\n      addonLeftIcon: String\n    },\n    data() {\n      return {\n        focused: false\n      }\n    },\n    computed: {\n      listeners() {\n        return {\n          ...this.$listeners,\n          input: this.updateValue,\n          focus: this.onFocus,\n          blur: this.onBlur\n        }\n      },\n      hasIcon() {\n        const {addonRight, addonLeft} = this.$slots;\n        return addonRight !== undefined || addonLeft !== undefined || this.addonRightIcon !== undefined || this.addonLeftIcon !== undefined\n      }\n    },\n    methods: {\n      updateValue(evt) {\n        let value = evt.target.value;\n        this.$emit('input', value);\n      },\n      onFocus(value){\n        this.focused = true;\n        this.$emit('focus', value);\n      },\n      onBlur(value){\n        this.focused = false;\n        this.$emit('blur', value);\n      }\n    }\n  }\n</script>\n<style>\n\n</style>\n"]}]}