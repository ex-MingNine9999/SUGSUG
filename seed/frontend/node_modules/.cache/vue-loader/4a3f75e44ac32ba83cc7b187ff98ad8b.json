{"remainingRequest":"/Users/ming._.nine9/SW/seed/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ming._.nine9/SW/seed/frontend/src/components/Dropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ming._.nine9/SW/seed/frontend/src/components/Dropdown.vue","mtime":1601738044360},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ming._.nine9/SW/seed/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'drop-down',\n  props: {\n    direction: {\n      type: String,\n      default: 'down'\n    },\n    title: String,\n    icon: String,\n    position: String,\n    hideArrow: Boolean,\n    tag: {\n      type: String,\n      default: 'li'\n    }\n  },\n  data() {\n    return {\n      isOpen: false\n    }\n  },\n  provide() {\n    return {\n      closeDropDown: this.closeDropDown\n    }\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen\n      this.$emit('change', this.isOpen)\n    },\n    closeDropDown() {\n      this.isOpen = false\n      this.$emit('change', this.isOpen)\n    }\n  }\n}\n",{"version":3,"sources":["Dropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dropdown.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <component class=\"dropdown\"\n             :is=\"tag\"\n             :class=\"[{show: isOpen}, {'dropdown': direction === 'down'}, {'dropup': direction ==='up'}]\"\n             aria-haspopup=\"true\"\n             :aria-expanded=\"isOpen\"\n             @click=\"toggleDropDown\"\n             v-click-outside=\"closeDropDown\">\n\n    <slot name=\"title\">\n      <a class=\"dropdown-toggle nav-link\"\n         :class=\"{'no-caret': hideArrow}\"\n         data-toggle=\"dropdown\">\n        <i :class=\"icon\"></i>\n        <span class=\"no-icon\">{{title}}</span>\n      </a>\n    </slot>\n    <ul class=\"dropdown-menu\"\n        :class=\"[{'dropdown-menu-right': position === 'right'}, {show: isOpen}]\">\n      <slot></slot>\n    </ul>\n  </component>\n</template>\n<script>\n  export default {\n    name: 'drop-down',\n    props: {\n      direction: {\n        type: String,\n        default: 'down'\n      },\n      title: String,\n      icon: String,\n      position: String,\n      hideArrow: Boolean,\n      tag: {\n        type: String,\n        default: 'li'\n      }\n    },\n    data() {\n      return {\n        isOpen: false\n      }\n    },\n    provide() {\n      return {\n        closeDropDown: this.closeDropDown\n      }\n    },\n    methods: {\n      toggleDropDown() {\n        this.isOpen = !this.isOpen\n        this.$emit('change', this.isOpen)\n      },\n      closeDropDown() {\n        this.isOpen = false\n        this.$emit('change', this.isOpen)\n      }\n    }\n  }\n</script>\n<style>\n  .dropdown {\n    list-style-type: none;\n  }\n\n  .dropdown .dropdown-toggle {\n    cursor: pointer;\n  }\n</style>\n"]}]}